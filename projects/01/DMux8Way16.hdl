// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way16 {
    IN in[16], sel[3];
    OUT a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16];

    PARTS:
    Not(in = sel[0],out = notsel0);
	Not(in = sel[1],out = notsel1);
	Not(in = sel[2],out = notsel2);
	
	And(a = notsel0, b = notsel1, out = a1);
	And(a = a1, b = notsel2, out = a2);
	And16(a = in, b[0] = a2, b[1] = a2,
				  b[2] = a2, b[3] = a2,
				  b[4] = a2, b[5] = a2,
				  b[6] = a2, b[7] = a2,
				  b[8] = a2, b[9] = a2,
				  b[10] = a2, b[11] = a2,
				  b[12] = a2, b[13] = a2,
				  b[14] = a2, b[15] = a2,
		out = a);
	
	And(a = sel[0], b = notsel1, out = b1);
	And(a = b1, b = notsel2, out = b2);
	And16(a = in, b[0] = b2, b[1] = b2,
				b[2] = b2, b[3] = b2,
				b[4] = b2, b[5] = b2,
				b[6] = b2, b[7] = b2,
				b[8] = b2, b[9] = b2,
				b[10] = b2, b[11] = b2,
				b[12] = b2, b[13] = b2,
				b[14] = b2, b[15] = b2,
		out = b);
	
	And(a = notsel0, b = sel[1], out = c1);
	And(a = c1, b = notsel2, out = c2);
	And16(a = in, b[0] = c2, b[1] = c2,
				b[2] = c2, b[3] = c2,
				b[4] = c2, b[5] = c2,
				b[6] = c2, b[7] = c2,
				b[8] = c2, b[9] = c2,
				b[10] = c2, b[11] = c2,
				b[12] = c2, b[13] = c2,
				b[14] = c2, b[15] = c2,
		out = c);
	
	And(a = sel[0], b = sel[1], out = d1);
	And(a = d1, b = notsel2, out = d2);
	And16(a = in, b[0] = d2, b[1] = d2,
				b[2] = d2, b[3] = d2,
				b[4] = d2, b[5] = d2,
				b[6] = d2, b[7] = d2,
				b[8] = d2, b[9] = d2,
				b[10] = d2, b[11] = d2,
				b[12] = d2, b[13] = d2,
				b[14] = d2, b[15] = d2, 
	out = d);
	
	And(a = notsel0, b = notsel1, out = e1);
	And(a = e1, b = sel[2], out = e2);
	And16(a = in, b[0] = e2, b[1] = e2,
				b[2] = e2, b[3] = e2,
				b[4] = e2, b[5] = e2,
				b[6] = e2, b[7] = e2,
				b[8] = e2, b[9] = e2,
				b[10] = e2, b[11] = e2,
				b[12] = e2, b[13] = e2,
				b[14] = e2, b[15] = e2,
		out = e);
	
	And(a = sel[0], b = notsel1, out = f1);
	And(a = f1, b = sel[2], out = f2);
	And16(a = in, b[0] = f2, b[1] = f2,
				b[2] = f2, b[3] = f2,
				b[4] = f2, b[5] = f2,
				b[6] = f2, b[7] = f2,
				b[8] = f2, b[9] = f2,
				b[10] = f2, b[11] = f2,
				b[12] = f2, b[13] = f2,
				b[14] = f2, b[15] = f2,
		out = f);
	
	And(a = notsel0, b = sel[1], out = g1);
	And(a = g1, b = sel[2], out = g2);
	And16(a = in, b[0] = g2, b[1] = g2,
				b[2] = g2, b[3] = g2,
				b[4] = g2, b[5] = g2,
				b[6] = g2, b[7] = g2,
				b[8] = g2, b[9] = g2,
				b[10] = g2, b[11] = g2,
				b[12] = g2, b[13] = g2,
				b[14] = g2, b[15] = g2,
		out = g);
	
	And(a = sel[0], b = sel[1], out = h1);
	And(a = h1, b = sel[2], out = h2);
	And16(a = in, b[0] = h2, b[1] = h2,
				b[2] = h2, b[3] = h2,
				b[4] = h2, b[5] = h2,
				b[6] = h2, b[7] = h2,
				b[8] = h2, b[9] = h2,
				b[10] = h2, b[11] = h2,
				b[12] = h2, b[13] = h2,
				b[14] = h2, b[15] = h2,
		out = h);
	
}