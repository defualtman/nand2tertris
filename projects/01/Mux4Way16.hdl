// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
	Mux16(a = a,b = b,sel = sel[0],out = w1);
	Mux16(a = c,b = d,sel = sel[0],out = w2);
	Mux16(a = w1,b = w2,sel = sel[1],out = out);
}

/**
*Not(in = sel[0],out = notsel0);
*	Not(in = sel[1],out = notsel1);
*	
*	And(a = notsel0,b = notsel1,out = aparam);
*   And16(
*		a[0..15] = a[0..15], 
*		b[0] = aparam,b[1] = aparam,b[2] = aparam,b[3] = aparam,
*		b[4] = aparam,b[5] = aparam,b[6] = aparam,b[7] = aparam,
*		b[8] = aparam,b[9] = aparam,b[10] = aparam,b[11] = aparam,
*		b[12] = aparam,b[13] = aparam,b[14] = aparam,b[15] = aparam,
*		out[0..15] = arst 
*	);
*	
*	And(a = notsel0,b = sel[1],out = bparam);
*	And16(
*		a[0..15] = b[0..15],
*		b[0] = bparam,b[1] = bparam,b[2] = bparam,b[3] = bparam,
*		b[4] = bparam,b[5] = bparam,b[6] = bparam,b[7] = bparam,
*		b[8] = bparam,b[9] = bparam,b[10] = bparam,b[11] = bparam,
*		b[12] = bparam,b[13] = bparam,b[14] = bparam,b[15] = bparam,
*		out[0..15] = brst
*	);
*	
*	And(a = sel[0],b = notsel1,out = cparam);
*	And16(
*		a[0..15] = c[0..15],
*		b[0] = cparam,b[1] = cparam,b[2] = cparam,b[3] = cparam,
*		b[4] = cparam,b[5] = cparam,b[6] = cparam,b[7] = cparam,
*		b[8] = cparam,b[9] = cparam,b[10] = cparam,b[11] = cparam,
*		b[12] = cparam,b[13] = cparam,b[14] = cparam,b[15] = cparam,
*		out[0..15] = crst
*	);
*	
*	And(a = sel[0],b = sel[1],out = dparam);
*	And16(
*		a[0..15] = d[0..15],
*		b[0] = dparam,b[1] = dparam,b[2] = dparam,b[3] = dparam,
*		b[4] = dparam,b[5] = dparam,b[6] = dparam,b[7] = dparam,
*		b[8] = dparam,b[9] = dparam,b[10] = dparam,b[11] = dparam,
*		b[12] = dparam,b[13] = dparam,b[14] = dparam,b[15] = dparam,
*		out[0..15] = drst
*	);
*	
*	Or16(a[0..15] = arst,b[0..15] = brst,out[0..15] = rst1);
*	Or16(a[0..15] = crst,b[0..15] = drst,out[0..15] = rst2);
*	Or16(a[0..15] = rst1,b[0..15] = rst2,out[0..15] = out);
*
*/